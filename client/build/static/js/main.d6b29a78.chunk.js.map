{"version":3,"sources":["components/list/index.js","components/grid/index.js","components/book/index.js","components/jumbotron/index.js","components/card/index.js","components/footer/index.js","components/form/index.js","utils/API.js","pages/Home.js","pages/NoMatchFound.js","pages/SavedBooks.js","components/navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["List","children","className","ListItem","Container","fluid","Row","Col","size","split","map","join","Book","title","Subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Jumbotron","Card","icon","aria-hidden","Footer","Form","query","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","axios","get","params","q","delete","data","post","Home","state","books","message","event","setState","getBooks","API","then","res","console","log","length","catch","preventDefault","handleBookSave","book","find","volumeInfo","url_link","infoLink","imageLinks","thumbnail","this","key","Component","NoMatchFound","role","aria-label","Saved","getSavedBooks","err","handleBookDelete","subtitle","_id","navBar","open","width","window","innerWidth","updateWidth","newState","toggleNavBar","addEventListener","removeEventListener","Link","to","data-toggle","data-target","aria-controls","area-expanded","area-label","location","pathname","App","Switch","Route","exact","path","component","NoMatchFoundData","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6b29a78.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const List = ({ children }) => {\n  return <ul className=\"list-group\">{children}</ul>;\n};\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\nexport function Container ({ fluid, children }) {\n    return <div className={ `container${ fluid ? \"-fluid\" : \"\" }` }>{ children }</div>\n};\n\nexport function Row ({ fluid, children }) {\n    return <div className={ `row${ fluid ? \"-fluid\" : \"\" }` }>{ children }</div>\n};\n\nexport function Col ({ size, children }) {\n    return (\n        <div className={ size.split(\" \").map(size => `col-${ size }`).join(\" \") }>\n            { children }\n        </div>\n    );\n};","import React from \"react\";\nimport { ListItem } from \"../list\";\nimport { Row, Col } from \"../grid\";\n\nfunction Book ({ title, Subtitle, authors, link, description, image, Button }) {\n    return (\n        <ListItem>\n            <Row className=\"flex-wrap-reverse\">\n                <Col size=\"md-8\">\n                    <h4 className=\"font-italic\">{ title }</h4>\n                    { Subtitle && <h5 className=\"font-italic\">{ Subtitle }</h5> }\n                </Col>\n                <Col size=\"md-4\">\n                    <div className=\"btn-container\">\n                        <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={ link }>\n                            View\n                        </a>\n                        <Button />\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"md-6\">\n                    <p className=\"font-italic small\">Written by { authors }</p>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"12 sm-4 md-2\">\n                    <img className=\"img-thumbnail img-fluid w-100\" src={ image } alt={ title } />\n                </Col>\n                <Col size=\"12 sm-8, md-10\">\n                    <p>{ description }</p>\n                </Col>\n            </Row>\n        </ListItem>\n    )\n};\n\nexport default Book;","import React from \"react\";\n\nfunction Jumbotron ({ children }) {\n    return (\n        <div className=\"jumbotron\">\n            { children }\n        </div>\n    );\n};\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Card ({ icon, title, children }) {\n    return (\n        <div className=\"card mt-2\">\n            <div className=\"card-header\">\n                <h4>\n                    <i className={ `fa fa-${ icon }` } aria-hidden=\"true\" /> { title }\n                </h4>\n            </div>\n            <div className=\"card-body\">\n                { children }\n            </div>\n        </div >\n    )\n};\n\nexport default Card;","import React from \"react\";\n\nfunction Footer () {\n    return (\n        <footer>\n            <hr />\n        </footer>\n    )\n};\n\nexport default Footer;","import React from \"react\";\n\nfunction Form ({ query, handleInputChange, handleFormSubmit }) {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"Query\" className=\"font-weight-bolder\">\n                    Book title\n                </label>\n                <input\n                    className=\"form-control\"\n                    id=\"Title\"\n                    type=\"text\"\n                    value={query}\n                    placeholder=\"Enter book Title\"\n                    name=\"query\"\n                    onChange={ handleInputChange }\n                    required\n                />\n            </div>\n            <div className=\"pull-right\">\n                <button\n                    onClick={ handleFormSubmit }\n                    type=\"submit\"\n                    className=\"btn btn-lg btn-success float-right\"\n                >\n                    Search\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import axios from \"axios\";\n\nexport default {\n    getBooks: function (query) {\n        return axios.get(`/api/google/`, {\n            params: {\n                q: `${ query }`\n            }\n        });\n    },\n    getSavedBooks: function () {\n        return axios.get(`/api/books/`)\n    },\n    deleteBook: function (id) {\n        return axios.delete(`/api/books/${id}`)\n    },\n    saveABook: function (data) {\n        return axios.post(`/api/books/`, data)\n    }\n};\n","import React, { Component } from \"react\";\nimport Book from \"../components/book\";\nimport Jumbotron from \"../components/jumbotron\";\nimport Card from \"../components/card\";\nimport Footer from \"../components/footer\";\nimport Form from \"../components/form\";\nimport { List } from \"../components/list\";\nimport { Row, Col, Container } from \"../components/grid\";\nimport API from \"../utils/API\";\n\nclass Home extends Component {\n  state = {\n    books: [],\n    query: \"\",\n    message: \"Enter the Book title\"\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.query)\n      .then(res => {\n        console.log(`The response is ${res.data.length}`);\n        this.setState({\n          books: res.data\n        });\n      })\n      .catch(() => {\n        this.setState({\n          books: [],\n          message: \"No books were found!\"\n        });\n      });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  handleBookSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n\n    API.saveABook({\n      id: book.id,\n      title: book.volumeInfo.title,\n      url_link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">Search Google Books</h1>\n              <h3 className=\"text-center\">\n                Search a Book with entering Book title\"\n              </h3>\n            </Jumbotron>\n          </Col>\n          <Col size=\"md-12\">\n            <Card title=\"Book Search\" icon=\"fas fa-search\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                query={this.state.query}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Results\" icon=\"fas fa-book-open\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book.id}\n                      title={book.volumeInfo.title}\n                      link={book.volumeInfo.infoLink}\n                      authors={book.volumeInfo.authors.join(\", \")}\n                      description={book.volumeInfo.description}\n                      image={book.volumeInfo.imageLinks.thumbnail}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookSave(book.id)}\n                          className=\"btn btn-warning ml-2\"\n                        >\n                          Save\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/grid\";\nimport Jumbotron from \"../components/jumbotron\";\n\nfunction NoMatchFound () {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12\">\n                    <Jumbotron>\n                        <h1>404 Page Not Found</h1>\n                        <h1>\n                            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                                🙄\n              </span>\n                        </h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default NoMatchFound;","import React, { Component } from \"react\";\nimport Book from \"../components/book\";\nimport Jumbotron from \"../components/jumbotron\";\nimport Card from \"../components/card\";\nimport Footer from \"../components/footer\";\nimport { List } from \"../components/list\";\nimport { Row, Col, Container } from \"../components/grid\";\nimport API from \"../utils/API\";\n\nclass Saved extends Component {\n    state = {\n        books: []\n    };\n\n    componentDidMount () {\n        this.getSavedBooks();\n    };\n\n    getSavedBooks = () => {\n        API.getSavedBooks().then(res => {\n            console.log(res);\n            this.setState({\n                books: res.data\n            });\n        }).catch(err => console.log(err));\n    };\n\n    handleBookDelete = id => {\n        API.deleteBook(id).then(res => { this.getSavedBooks() });\n    };\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1 className=\"text-center\">\n                                <strong>Google Books Search</strong>\n                            </h1>\n                            <h2 className=\"text-center\">These are the books you have curated. Press \"View\" to see more information on that title. Press \"Delete\" to ... well, you know ... delete an item from your Saved Books list.</h2>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Card title=\"Saved Books\" icon=\"bookmark\">\n                            { this.state.books.length ? (\n                                <List>\n                                    { this.state.books.map(book => (\n                                        <Book\n                                            key={ book.id }\n                                            title={ book.title }\n                                            subtitle={ book.subtitle }\n                                            link={ book.url_link }\n                                            authors={ book.authors.join(\", \") }\n                                            description={ book.description }\n                                            image={ book.image }\n                                            Button={ () => (\n                                                <button\n                                                    onClick={ () => this.handleBookDelete(book._id) }\n                                                    className=\"btn btn-dark ml-2\"\n                                                >\n                                                    Delete\n                        </button>\n                                            ) }\n                                        />\n                                    )) }\n                                </List>\n                            ) : (\n                                    <h2 className=\"text-center\">You haven't saved any books yet.</h2>\n                                ) }\n                        </Card>\n                    </Col>\n                </Row>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\nexport default Saved;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass navBar extends Component {\n    state = {\n        open: false,\n        width: window.innerWidth\n    };\n\n    updateWidth = () => {\n        const newState = { width: window.innerWidth };\n        if (this.state.open && newState.width > 960)\n        {\n            newState.open = false\n        }\n        this.setState(newState);\n    };\n\n    toggleNavBar = () => {\n        this.setState({ open: !this.state.open })\n    };\n\n    componentDidMount () {\n        window.addEventListener(`resize`, this.updateWidth)\n    };\n\n    componentWillUnmount () {\n        window.removeEventListener(`resize`, this.updateWidth)\n    };\n\n    render () {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-1\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Google Books Search\n                </Link>\n                <button\n                    onClick={ this.toggleNavBar }\n                    className=\"navbar-toggler\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    area-expanded=\"false\"\n                    area-label=\"Toggle Navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className={ `${ this.state.open ? \"\" : \"collapse \" }navbar-collapse` } id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <Link\n                                onClick={ this.toggleNavBar }\n                                className={ window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\" }\n                                to=\"/\"\n                            >\n                                Search\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                onClick={ this.toggleNavBar }\n                                className={ window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\" }\n                                to=\"/saved\"\n                            >\n                                Saved\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n};\n\nexport default navBar;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NoMatchFoundData from \"./pages/NoMatchFound\";\nimport Saved from \"./pages/SavedBooks\";\nimport NavBar from \"./components/navbar\";\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={ Saved } />\n          <Route component={ NoMatchFoundData } />\n          \n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}